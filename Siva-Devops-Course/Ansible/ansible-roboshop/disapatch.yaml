- name: dispatch-component
  hosts: dispatch
  become: 'yes'
  tasks:
    - name: install golang
      ansible.builtin.yum:
        name: golang
        state: installed
    - name: check roboshop exists or not
      ansible.builtin.command: id roboshop
      register: out
      ignore_errors: true
    - when: out.rc != 0
      name: create roboshop user
      become: 'yes'
      ansible.builtin.user:
        name: roboshop
    - name: check /app directory exists or not
      ansible.builtin.stat:
        path: /app
        register: directory
    - name: print directory status
      ansible.builtin.debug:
        msg: 'output: {{directory}}'
    - when: directory stat.exists == False
      name: create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: Download dispatch artifact
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/dispatch.zip
        dest: /tmp
    - name: extract dispatch artifact
      ansible.builtin.unarchive:
        src: /tmp/dispatch.zip
        dest: /app
        remote_src: 'yes'
    - name: download the dependencies & build the software
      ansible.builtin.yum:
        name: '{{item}}'
        state: installed
      loop:
        - go mod init dispatch
        - go get
        - go build
    - name: copy file /dispatch.service to /etc/systemd/system/dispatch.service
      ansible.builtin.copy:
        src: /dispatch.service
        dest: /etc/systemd/system/dispatch.service
    - name: daemon-reload
      ansible.builtin.systemd:
        daemon-reload: true
    - name: start dispatch
      ansible.builtin.service:
        name: dispatch
        state: started
        enabled: 'yes'
